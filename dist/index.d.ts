/* auto-generated by OHOS-RS */
/* eslint-disable */



export declare const enum ChatType {
  User = 0,
  Group = 1,
  Channel = 2
}

export declare const enum LoginState {
  WrongPhoneNumber = 0,
  CodeRequired = 1,
  WrongCode = 2,
  PasswordRequired = 3,
  WrongPassword = 4,
  LoggedIn = 5,
  LoginFailure = 6
}

export declare const enum MediaType {
  None = 0,
  Photo = 1,
  Document = 2,
  Sticker = 3,
  Contact = 4,
  Poll = 5,
  Geo = 6,
  Dice = 7,
  Venue = 8,
  GeoLive = 9,
  WebPage = 10
}

export interface NativeChat {
  chatId: number
  chatType: ChatType
  name: string
  pinned: boolean
  lastMessageId: number
  lastMessageSenderName: string
  lastMessageText: string
  lastMessageTimestamp: number
  megagroup: boolean
  forum: boolean
}

export interface NativeMessage {
  messageId: number
  chatId: number
  outgoing: boolean
  pinned: boolean
  senderId: number
  senderName: string
  timestamp: number
  text: string
  mediaType: MediaType
  editTimestamp?: number
  groupedId?: number
  replyToMessageId?: number
}

export interface NativePackedChat {
  chatId: number
  packedChat: string
}

export interface NativeRawMessage {
  chatId: number
  messageId: number
  rawMessage: ArrayBuffer
}

export interface NativeSeenChat {
  chatId: number
  chatType: ChatType
  packedChat: string
  isContact: boolean
  isMutualContact: boolean
  phone?: string
  username?: string
  photoThumb?: Array<number>
  fullName: string
  firstName: string
  lastName?: string
  bio?: string
  dateOfBirth?: number
  forum: boolean
}

export declare function downloadMediaFromMessage(chatId: number, messageId: number): Promise<string>

export declare function downloadProfilePhoto(chatId: number): Promise<string>

export declare function getChatPhotoThumb(chatId: number): Promise<ArrayBuffer | null>

export declare function getMe(): Promise<NativeSeenChat>

/**
  * Get the path of the profile photo of a chat.
  *
  * # Arguments
  *
  * * `chat_id` - the id of the chat.
  * * `current` - if true, return the path of the current profile photo,
  * otherwise return the path of the next profile photo.
  */
export declare function getProfilePhotoPathAndCount(chatId: number): ProfilePhotoPath

export declare function isLoggedIn(): Promise<boolean>

export declare function loadChats(): Promise<void>

export declare function loadChatsWithOffset(lastMessageIds: Record<string, number>): Promise<void>

export declare function login(phoneNumber: string): Promise<LoginState>

export declare function password(password: string): Promise<LoginState>

export declare function reconnect(): Promise<boolean>

export declare function registerCacheSeenChatCallback(cb: CacheSeenChatCallback): Promise<void>

export declare function registerDevice(token: string): Promise<boolean>

export declare function registerIncomingMessageCallback(cb: IncomingMessageCallback): Promise<void>

export declare function registerLoadChatsCallback(cb: LoadChatsCallback): Promise<void>

export declare function registerUpdateChatCallback(cb: UpdateChatCallback): Promise<void>

export declare function run(): Promise<void>

export declare function sendMessage(chatId: number, text: string, medias: Array<string> | undefined | null, updateUploadProgressCallback: UpdateUploadProgressCallback): Promise<Array<NativeMessage>>

export declare function signOut(): Promise<boolean>

export declare function stop(): Promise<void>

export declare function syncCachesFromLocalDb(packedChats: Array<NativePackedChat>, chats: Array<NativeChat>): Promise<void>

export declare function verifyCode(code: string): Promise<LoginState>

export declare class ProfilePhotoPath {
  dir: string
  current?: string
  next: string
  count: number
}

